name: build and publish

on:
  push:
    branches:
      - master
  workflow_dispatch:
  # Rebuild monthly to keep packages up to date
  schedule:
    - cron: '0 0 1 * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TIKA_JAR_NAME: "tika-server-standard"
jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TIKA_TYPE: [full, minimal]
        TIKA_VERSION: [2.7.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          TAGS=${DOCKER_IMAGE}:${{ matrix.TIKA_VERSION }}-${{ matrix.TIKA_TYPE }}
          if [[ "${{matrix.TIKA_TYPE}}" == "full" ]]; then
            TAGS=$TAGS,${DOCKER_IMAGE}:latest-full
          else
            TAGS=$TAGS,${DOCKER_IMAGE}:latest
          fi
          # Set output parameters.
          echo "tags"=${TAGS} >> $GITHUB_OUTPUT
          echo "docker_image"=${DOCKER_IMAGE} >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ matrix.TIKA_TYPE }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          build-args: |
            TIKA_VERSION=${{ matrix.TIKA_VERSION }}
            TIKA_JAR_NAME=${{ env.TIKA_JAR_NAME }}
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
