name: build and publish

on:
  push:
    branches:
      - master
  workflow_dispatch:
  # Rebuild monthly to keep packages up to date
  schedule:
    - cron: '0 0 1 * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TIKA_JAR_NAME: "tika-server-standard"
jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        TIKA_TYPE: [full, minimal]
        TIKA_VERSION: [2.9.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      -
        name: Gather Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.TIKA_VERSION }}-${{ matrix.TIKA_TYPE }}
            type=raw,enable=${{ matrix.TIKA_TYPE == 'minimal'}},value=latest
            type=raw,enable=${{ matrix.TIKA_TYPE == 'full'}},value=latest-full

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ matrix.TIKA_TYPE }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            TIKA_VERSION=${{ matrix.TIKA_VERSION }}
            TIKA_JAR_NAME=${{ env.TIKA_JAR_NAME }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
