name: build and publish

on:
  push:
    branches:
      - master
  workflow_dispatch:
  # Rebuild monthly to keep packages up to date
  schedule:
    - cron: '0 0 1 * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TIKA_VERSION: "2.7.0"
jobs:
  docker:
    name: Build image ${{ matrix.type }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - type: full
            platforms: linux/amd64,linux/arm64,linux/arm/v7
          - type: minimal
            platforms: linux/amd64,linux/arm64,linux/arm/v7
          - type: alpine
            platforms: linux/amd64,linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      -
        name: Gather Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.TIKA_VERSION }}-${{ matrix.type }}
            type=raw,enable=${{ matrix.type == 'minimal'}},value=latest
            type=raw,enable=${{ matrix.type == 'full'}},value=latest-full
            type=raw,enable=${{ matrix.type == 'alpine'}},value=latest-alpine

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ matrix.type }}/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          build-args: |
            TIKA_VERSION=${{ env.TIKA_VERSION }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
